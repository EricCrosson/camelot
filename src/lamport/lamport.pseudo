hared variable
	P: array[0..N - 1] of boolean initially false;
	E: array[0..N - 1] of boolean initially false;
	T: array[0..N - 1] of boolean

process p /* 0 <= p < N */

private variable
	i, k: 0..N - 1;
	temp: boolean

while true do
1:	Noncritical Section;
2:	P[p] := true;
3:	E[p] := true;
4:	k := low(T,E);
5:	if k != p then
6:		for i := k cyclically to (p - 1) mod N do
7:			if E[i] then
8:				P[p] := false;
9:				go to 3
			fi
		od
	fi;
10:	if ￢P[p] then go to 2 fi;
11:	for i := p + 1 cyclically to (k - 1) mod N do
12:		if P[i] then go to 2 fi
	od;
13:	Critical Section;
14:	temp := ￢T[p];
15:	T[p] := temp;
16:	P[p] := false;
17:	E[p] := false
od
