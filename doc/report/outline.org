* Abstract
** This is italicized executive summary at the beginning (not its own section)
* Introduction
** State the problem statement
   Specify and verify the correctness of four different distributed algorithms
   using Promela language and the SPIN model checker.
** Contributions
*** infrastructure & architecture, Szymanski                           :eric:
- github repo
- slack channel
  - updated by github events
- dir structure
  - had to evolve to meet needs of the team over time
- cmake build system
  - evolved with dir structure and increasing complexity of specifications
- docker build environments
- travis continuous integration
  - uses docker environments
- auto updates of deliverables to master branch
  - triggered by successful travis builds
*** Lamport                                                          :stormy:
- bug finding and bug grinding (aka guinea pig/exterminator)
*** Token ring                                                       :daniel:
*** Dining Philosophers                                                :nhan:
* Project Description
** Talk about Promela
** Talk about SPIN
** Algorithms chosen:
   - Dining Philosophers
   - Token Ring
   - Lamport
   - Szymanski
*** What is the best order?
    Szymanski immediately after Lamport, and otherwise order of complexity?
* Design Alternatives
** Maybe discuss why we chose the algorithms we did
- can't discuss why spin was chosen
** Discuss other types of verification software and pros/cons
   - theorem based provers
   - other model checkers
     - FormalCheck
* Performance results
** Lot of graphs (2-4) per algorithm
   - use spin/dot to generate nodal graphs
* Conclusions
** Summarize why each algorithm has been proven correct
** Review our experience with promela
* References
- See acm references in top level README.md
** Inspiration for choosing the four that we did
   - https://www.cs.rutgers.edu/~pxk/417/notes/10-mutex.html
** Dining Philosophers
   - https://github.com/oflynned/DiningPhilosophersPromela
** Token Ring
   - http://spinroot.com/spin/Workshops/ws96/Sh.pdf (NOT SUFFICIENT)
** Lamport
   - http://www.ueda.info.waseda.ac.jp/~kobayashi/Promela/benchmark/mutex_L_N3.html
** Szymanski
   - https://github.com/stupaq/promela-szymanski
